{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","changedNote","returnedNote","catch","error","setTimeout","n","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,EAZF,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,iBAEbC,EAAQF,EAAKG,UACf,qBAAuB,iBACzB,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAoBC,K,wBCgB9B,EArBA,WACX,IAAMK,EAAUC,IAAMC,IAHV,cAINC,EAAc,CAChBC,GAAI,IACJN,QAAS,mCACTO,KAAM,2BACNT,WAAW,GAEf,OAAOI,EAAQM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAON,OAa1C,EAVA,SAACO,GAEZ,OADgBT,IAAMU,KAdV,aAcwBD,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACJ,EAAIM,GAEhB,OADgBT,IAAMW,IAAN,UAnBJ,aAmBI,YAAwBR,GAAMM,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCR9BK,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAe,OAAZA,GAAgC,KAAZA,EACZ,KAGH,yBAAKjB,UAAU,SACViB,ICQFC,EAdA,WAMX,OACI,yBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIN,6BACA,uGCqFGC,EAzFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAI0BN,mBAAS,IAJnC,mBAIRO,EAJQ,KAIMC,EAJN,KAMhBC,qBAAU,WACRC,IAEGzB,MAAK,SAAA0B,GACJT,EAASS,QAEZ,IAEH,IAAMC,EAAcP,EAClBJ,EACAA,EAAMY,QAAO,SAAAzC,GAAI,OAAuB,IAAnBA,EAAKG,aA2C5B,OACE,6BACE,qCAEA,kBAAC,EAAD,CAAckB,QAASc,IAEvB,6BACE,4BAAQ7B,QAAS,kBAAM4B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAAC1C,GAAD,OACf,kBAAC,EAAD,CAAM2C,IAAK3C,EAAKW,GAAIX,KAAMA,EAAMC,kBAlCdU,EAkCiDX,EAAKW,GAlC/C,WAE/B,IAAMX,EAAO6B,EAAMe,MAAK,SAAA5C,GAAI,OAAIA,EAAKW,KAAOA,KACtCkC,EAAW,2BAAO7C,GAAP,IAAaG,WAAYH,EAAKG,YAE/CmC,EACU3B,EAAIkC,GACXhC,MAAK,SAAAiC,GACJhB,EAASD,EAAMa,KAAI,SAAA1C,GAAI,OAAIA,EAAKW,KAAOA,EAAKX,EAAO8C,SAEpDC,OAAM,SAAAC,GACLZ,EAAgB,SAAD,OACJpC,EAAKK,QADD,sCAGf4C,YAAW,WACTb,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAS,GAAC,OAAGA,EAAEvC,KAAOA,aAjBhB,IAACA,MAsCtB,0BAAMwC,SA1DM,SAACC,GACbA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAAS0B,EACTnB,MAAM,IAAI2C,MAAOC,cACjBrD,UAAWsD,KAAKC,SAAW,IAG7BpB,EACUgB,GACPzC,MAAK,SAAAiC,GACJhB,EAASD,EAAMb,OAAO8B,IACtBd,EAAW,SA+Cb,2BACE2B,MAAO5B,EACP6B,SA7CiB,SAACR,GACxBpB,EAAWoB,EAAMS,OAAOF,UA8CpB,4BAAQG,KAAK,UAAb,SAGF,kBAAC,EAAD,QCtFNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.4c7a5d8c.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({note, toggleImportance}) => {\n\n  const label = note.important\n    ? 'make not important' : 'make important'\n    return (\n      <li className=\"note\">\n        {note.content}\n        <button onClick={toggleImportance}>{ label }</button>\n      </li>\n    )\n  }\n\nexport default Note;","import axios from 'axios'\n\nconst baseUrl = \"/api/notes\"\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    const nonExisting = {\n        id: 10000,\n        content: 'This note is not saved to server',\n        date: '2019-05-30T17:30:31.098Z',\n        important: true,\n    }\n    return request.then(response => response.data.concat(nonExisting))\n} \n\nconst create = (newObject) => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, }","import React from 'react';\n\nconst Notification = ({message}) => {\n    if(message === null || message === ''){\n        return null\n    }else{\n        return (\n            <div className=\"error\">\n                {message}\n            </div>\n        )\n    }\n} \n\nexport default Notification","import React from 'react';\n\nconst Footer = () => {\n    const footerStyle = {\n        color: 'green',\n        fontStyle: 'italic',\n        fontSize: 16\n    }\n    return (\n        <div style={footerStyle}>\n            <br />\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\n        </div>\n    )\n}\n\nexport default Footer","import React, {useState, useEffect} from 'react'\nimport Note from './components/Note.js'\nimport './index.css'\nimport noteService from './services/notes'\nimport Notification from './components/Notification'\nimport Footer from './components/Footer.js'\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [ errorMessage, setErrorMessage ] = useState('')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes=> {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll  \n  ? notes    \n  : notes.filter(note => note.important === true)\n\n  const addNote = (event) => {\n      event.preventDefault()\n      const noteObject = {\n        content: newNote,\n        date: new Date().toISOString(),\n        important: Math.random() < 0.5,\n      }\n\n      noteService\n        .create(noteObject)\n        .then(returnedNote=> {\n          setNotes(notes.concat(returnedNote))\n          setNewNote('')\n        })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)  \n  }\n\n  const toggleImportance = (id) => () => {\n    // const url = `http://localhost:3001/notes/${id}`\n    const note = notes.find(note => note.id === id)\n    const changedNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote=> {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error=> {\n        setErrorMessage(\n          `Note '${note.content}' was already deleted from server`\n        )\n        setTimeout(()=>{\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n=> n.id !== id))\n      })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n\n      <Notification message={errorMessage} />\n\n      <div>        \n        <button onClick={() => setShowAll(!showAll)}>          \n          show {showAll ? 'important' : 'all' }        \n        </button>      \n      </div>\n      <ul>\n        {notesToShow.map((note) => \n          <Note key={note.id} note={note} toggleImportance={toggleImportance(note.id)} />\n        )}\n      </ul>\n\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}